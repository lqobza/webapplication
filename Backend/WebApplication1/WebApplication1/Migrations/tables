CREATE TABLE Theme (
    id int identity(1,1) primary key,
    name nvarchar(255) NOT NULL UNIQUE
);

CREATE TABLE Brand (
    id int identity(1,1) primary key,
    name nvarchar(255) NOT NULL UNIQUE
);

CREATE TABLE Category (
    id int identity(1,1) primary key,
    name nvarchar(255) NOT NULL UNIQUE
);


CREATE TABLE Merch (
    id int identity(1,1) primary key,
    category_id int NOT NULL foreign key references Category(id),
    name nvarchar(255) NOT NULL,
    price int NOT NULL,
    description nvarchar(255) NOT NULL,
    brand_id int NOT NULL foreign key references Brand(id)
);


CREATE TABLE MerchTheme (
    merch_id int foreign key references Merch(id) NOT NULL,
    theme_id int foreign key references Theme(id) NOT NULL,
    PRIMARY KEY (merch_id, theme_id)
);

CREATE TABLE Ratings (
    id int identity(1,1) primary key,
    merch_id int foreign key references Merch(id) NOT NULL,
    rating int check (rating >= 1 AND rating <= 5) NOT NULL,
    description nvarchar(255),
    created_at datetime default getdate()
);

CREATE TABLE MerchSize (
    id int identity(1,1) primary key,
    merch_id int foreign key references Merch(id) NOT NULL,
    size nvarchar(255) NULL,
    instock int NOT NULL
);

CREATE TABLE Orders (
    id int identity(1,1) PRIMARY KEY,
    order_date DATETIME DEFAULT GETDATE() NOT NULL,
    total_amount decimal(10, 2) NOT NULL,
    customer_name nvarchar(255) NOT NULL,
    customer_email nvarchar(255) NOT NULL,
    customer_address nvarchar(255) NOT NULL
);

CREATE TABLE OrderItems (
    id int IDENTITY(1,1) PRIMARY KEY,
    order_id int NOT NULL FOREIGN KEY REFERENCES Orders(id) ON DELETE CASCADE,
    merch_id int NOT NULL FOREIGN KEY REFERENCES Merch(id),
    size nvarchar(255) NOT NULL,
    quantity int NOT NULL,
    price decimal(10, 2) NOT NULL
);

CREATE TABLE MerchandiseImages (
    id int identity(1,1) primary key,
    merch_id int foreign key references Merch(id) NOT NULL,
    image_url nvarchar(500) NOT NULL,
    is_primary bit NOT NULL DEFAULT 0,
    created_at datetime DEFAULT GETDATE()
);

-- Create indexes on foreign key columns
-- Index on Merch.category_id
CREATE INDEX idx_merch_category_id ON Merch(category_id);

-- Index on Merch.brand_id
CREATE INDEX idx_merch_brand_id ON Merch(brand_id);

-- Index on MerchTheme.merch_id
CREATE INDEX idx_merchtheme_merch_id ON MerchTheme(merch_id);

-- Index on MerchTheme.theme_id
CREATE INDEX idx_merchtheme_theme_id ON MerchTheme(theme_id);

-- Index on Ratings.merch_id
CREATE INDEX idx_ratings_merch_id ON Ratings(merch_id);

-- Index on MerchSize.merch_id
CREATE INDEX idx_merchsize_merch_id ON MerchSize(merch_id);

-- Add index for faster lookups
CREATE INDEX idx_merchimages_merch_id ON MerchandiseImages(merch_id);

-- Drop the existing constraint
ALTER TABLE MerchandiseImages DROP CONSTRAINT FK_MerchandiseImages_Merchandise_MerchId;

-- Add the correct constraint pointing to the Merch table
ALTER TABLE MerchandiseImages 
ADD CONSTRAINT FK_MerchandiseImages_Merch_MerchId 
FOREIGN KEY (MerchId) REFERENCES Merch(id);

ALTER TABLE Orders
ADD user_id INT NULL;

UPDATE Orders
SET user_id = 1
WHERE user_id IS NULL;

CREATE TABLE OrderMessages (
    Id INT PRIMARY KEY IDENTITY(1,1),
    OrderId INT NOT NULL,
    Content NVARCHAR(1000) NOT NULL,
    Timestamp DATETIME2 NOT NULL DEFAULT GETDATE(),
    IsFromAdmin BIT NOT NULL,
    IsRead BIT NOT NULL DEFAULT 0,
    CONSTRAINT FK_OrderMessages_Orders FOREIGN KEY (OrderId) REFERENCES Orders(Id) ON DELETE CASCADE
);